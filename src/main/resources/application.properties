spring.application.name=Trendy

# Server port 설정
server.port=8080

# MySQL 설정
spring.datasource.url=jdbc:mysql://localhost:3307/trendy?useSSL=false&serverTimezone=UTC
spring.datasource.username=trendy
spring.datasource.password=P@$$w0rd
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Session Timeout 설정
server.servlet.session.timeout=30m

# OAuth2 Client Registration (Kakao)
spring.security.oauth2.client.registration.kakao.client-id=19da421eadddc010f2bf192572b32570
spring.security.oauth2.client.registration.kakao.client-secret=jsnAlPKbis1cDpljNt51HMKOFDvOEaSV
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image, account_email

# OAuth2 Provider (Kakao)
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# OAuth2 Client Registration (Google)
spring.security.oauth2.client.registration.google.client-id=192289103931-av6qe8kdlh0lis723iraogae7k6jvghm.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile, email

# OAuth2 Provider (Google)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub


# OAuth2 Client Registration (Naver)
spring.security.oauth2.client.registration.naver.client-id=_s5lLH90EYddd8KHdKLI
spring.security.oauth2.client.registration.naver.client-secret=vZgGvUYuSU
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=nickname,profile_image

# OAuth2 Provider (Naver)
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# JSP 설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# Thymeleaf 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Spring Security 로그 설정
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

